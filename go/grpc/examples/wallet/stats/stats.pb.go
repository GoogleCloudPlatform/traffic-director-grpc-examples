// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/grpc/examples/wallet/stats/stats.proto

package stats

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PriceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceRequest) Reset()         { *m = PriceRequest{} }
func (m *PriceRequest) String() string { return proto.CompactTextString(m) }
func (*PriceRequest) ProtoMessage()    {}
func (*PriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc8aa3fbe1481730, []int{0}
}

func (m *PriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceRequest.Unmarshal(m, b)
}
func (m *PriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceRequest.Marshal(b, m, deterministic)
}
func (m *PriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceRequest.Merge(m, src)
}
func (m *PriceRequest) XXX_Size() int {
	return xxx_messageInfo_PriceRequest.Size(m)
}
func (m *PriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PriceRequest proto.InternalMessageInfo

type PriceResponse struct {
	Price                int64    `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceResponse) Reset()         { *m = PriceResponse{} }
func (m *PriceResponse) String() string { return proto.CompactTextString(m) }
func (*PriceResponse) ProtoMessage()    {}
func (*PriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cc8aa3fbe1481730, []int{1}
}

func (m *PriceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceResponse.Unmarshal(m, b)
}
func (m *PriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceResponse.Marshal(b, m, deterministic)
}
func (m *PriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceResponse.Merge(m, src)
}
func (m *PriceResponse) XXX_Size() int {
	return xxx_messageInfo_PriceResponse.Size(m)
}
func (m *PriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PriceResponse proto.InternalMessageInfo

func (m *PriceResponse) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func init() {
	proto.RegisterType((*PriceRequest)(nil), "grpc.examples.wallet.stats.PriceRequest")
	proto.RegisterType((*PriceResponse)(nil), "grpc.examples.wallet.stats.PriceResponse")
}

func init() {
	proto.RegisterFile("proto/grpc/examples/wallet/stats/stats.proto", fileDescriptor_cc8aa3fbe1481730)
}

var fileDescriptor_cc8aa3fbe1481730 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x2f, 0x2a, 0x48, 0xd6, 0x4f, 0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0x2d, 0xd6,
	0x2f, 0x4f, 0xcc, 0xc9, 0x49, 0x2d, 0xd1, 0x2f, 0x2e, 0x49, 0x2c, 0x29, 0x86, 0x90, 0x7a, 0x60,
	0x65, 0x42, 0x52, 0x20, 0x75, 0x7a, 0x30, 0x75, 0x7a, 0x10, 0x75, 0x7a, 0x60, 0x15, 0x4a, 0x7c,
	0x5c, 0x3c, 0x01, 0x45, 0x99, 0xc9, 0xa9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x4a, 0xaa,
	0x5c, 0xbc, 0x50, 0x7e, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x08, 0x17, 0x6b, 0x01, 0x48,
	0x40, 0x82, 0x51, 0x81, 0x51, 0x83, 0x39, 0x08, 0xc2, 0x31, 0xba, 0xcc, 0xc8, 0xc5, 0x1a, 0x0c,
	0x32, 0x40, 0x28, 0x99, 0x8b, 0xcb, 0x2d, 0xb5, 0x24, 0x39, 0x03, 0xac, 0x4b, 0x48, 0x43, 0x0f,
	0xb7, 0x5d, 0x7a, 0xc8, 0x16, 0x49, 0x69, 0x12, 0xa1, 0x12, 0xe2, 0x04, 0x25, 0x06, 0xa1, 0x54,
	0x2e, 0xae, 0xf0, 0x44, 0x1a, 0x5b, 0x62, 0xc0, 0xe8, 0x94, 0xc3, 0x25, 0x9b, 0x99, 0x8f, 0x47,
	0x8b, 0x13, 0x17, 0xd8, 0xcf, 0x01, 0xa0, 0x50, 0x0d, 0x60, 0x8c, 0xb2, 0x4d, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x4b, 0xcf, 0xcf, 0x49, 0xcc, 0x4b, 0xd7, 0xcb, 0x2f, 0x4a, 0x87, 0xc4, 0x08,
	0x88, 0xd0, 0x85, 0xc6, 0x06, 0xee, 0x28, 0x4a, 0x62, 0x03, 0xc7, 0x8e, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0xa0, 0x77, 0x00, 0x7e, 0xcd, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StatsClient is the client API for Stats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsClient interface {
	FetchPrice(ctx context.Context, in *PriceRequest, opts ...grpc.CallOption) (*PriceResponse, error)
	WatchPrice(ctx context.Context, in *PriceRequest, opts ...grpc.CallOption) (Stats_WatchPriceClient, error)
}

type statsClient struct {
	cc grpc.ClientConnInterface
}

func NewStatsClient(cc grpc.ClientConnInterface) StatsClient {
	return &statsClient{cc}
}

func (c *statsClient) FetchPrice(ctx context.Context, in *PriceRequest, opts ...grpc.CallOption) (*PriceResponse, error) {
	out := new(PriceResponse)
	err := c.cc.Invoke(ctx, "/grpc.examples.wallet.stats.Stats/FetchPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsClient) WatchPrice(ctx context.Context, in *PriceRequest, opts ...grpc.CallOption) (Stats_WatchPriceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Stats_serviceDesc.Streams[0], "/grpc.examples.wallet.stats.Stats/WatchPrice", opts...)
	if err != nil {
		return nil, err
	}
	x := &statsWatchPriceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Stats_WatchPriceClient interface {
	Recv() (*PriceResponse, error)
	grpc.ClientStream
}

type statsWatchPriceClient struct {
	grpc.ClientStream
}

func (x *statsWatchPriceClient) Recv() (*PriceResponse, error) {
	m := new(PriceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StatsServer is the server API for Stats service.
type StatsServer interface {
	FetchPrice(context.Context, *PriceRequest) (*PriceResponse, error)
	WatchPrice(*PriceRequest, Stats_WatchPriceServer) error
}

// UnimplementedStatsServer can be embedded to have forward compatible implementations.
type UnimplementedStatsServer struct {
}

func (*UnimplementedStatsServer) FetchPrice(ctx context.Context, req *PriceRequest) (*PriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchPrice not implemented")
}
func (*UnimplementedStatsServer) WatchPrice(req *PriceRequest, srv Stats_WatchPriceServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchPrice not implemented")
}

func RegisterStatsServer(s *grpc.Server, srv StatsServer) {
	s.RegisterService(&_Stats_serviceDesc, srv)
}

func _Stats_FetchPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).FetchPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.examples.wallet.stats.Stats/FetchPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).FetchPrice(ctx, req.(*PriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_WatchPrice_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PriceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StatsServer).WatchPrice(m, &statsWatchPriceServer{stream})
}

type Stats_WatchPriceServer interface {
	Send(*PriceResponse) error
	grpc.ServerStream
}

type statsWatchPriceServer struct {
	grpc.ServerStream
}

func (x *statsWatchPriceServer) Send(m *PriceResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Stats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.examples.wallet.stats.Stats",
	HandlerType: (*StatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchPrice",
			Handler:    _Stats_FetchPrice_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchPrice",
			Handler:       _Stats_WatchPrice_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/grpc/examples/wallet/stats/stats.proto",
}
